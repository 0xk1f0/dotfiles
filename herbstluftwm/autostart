#!/usr/bin/env bash

#░█░█░█░░░█░█░█▄█░░░░░█▀▀░█▀█░█▀█░█▀▀░▀█▀░█▀▀░░░░░█░█░▀█░░█▀▀░▄▀▄
#░█▀█░█░░░█▄█░█░█░▄▄▄░█░░░█░█░█░█░█▀▀░░█░░█░█░▄▄▄░█▀▄░░█░░█▀▀░█/█
#░▀░▀░▀▀▀░▀░▀░▀░▀░░░░░▀▀▀░▀▀▀░▀░▀░▀░░░▀▀▀░▀▀▀░░░░░▀░▀░▀▀▀░▀░░░░▀░

# apply correct resolution and orientation
~/.config/herbstluftwm/scripts/xrandrapply.sh &

hc() {
    herbstclient "$@"
}

hc emit_hook reload

# remove all existing keybindings
hc keyunbind --all

# Use the super key as the main modifier
Mod=Mod4

hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-Shift-c close

#custom kb (req betterlockscreen, nemo, kitty, dmenu, flameshot)
hc keybind $Mod-Return spawn kitty
hc keybind $Mod-a spawn dmenu_run
hc keybind $Mod-l spawn betterlockscreen -l
hc keybind $Mod-q spawn nemo
hc keybind $Mod-Shift-s spawn flameshot gui

#fn keys (req pamixer and playerctl)
hc keybind XF86AudioRaiseVolume spawn ~/.config/herbstluftwm/scripts/volumeUp.sh
hc keybind XF86AudioLowerVolume spawn ~/.config/herbstluftwm/scripts/volumeDown.sh
hc keybind XF86AudioNext spawn playerctl next
hc keybind XF86AudioPrev spawn playerctl previous
hc keybind XF86AudioPlay spawn playerctl play-pause

# basic movement in tiling and floating mode for focusing
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right

# moving clients in tiling and floating mode (multi monitor)
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Control-Left     shift left
hc keybind $Mod-Shift-Control-Right     shift right
hc keybind $Mod-Shift-Left  chain , lock , shift_to_monitor -l , focus_monitor -l , unlock
hc keybind $Mod-Shift-Right chain , lock , shift_to_monitor -r , focus_monitor -r , unlock
hc keybind $Mod-Shift-j     chain , lock , shift_to_monitor -d , focus_monitor -d , unlock
hc keybind $Mod-Shift-k     chain , lock , shift_to_monitor -u , focus_monitor -u , unlock

# splitting frames
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5

# let the current frame explode into subframes
hc keybind $Mod-Control-space split explode

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# tags
tag_names=( {1..5} )
tag_keys=( {1..5} 0 )

# set default frame layout
hc set default_frame_layout grid

# create workspaces
hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# set default layout for tags
for i in 0 1 2 3 4 ; do
  if [ "$i" == 1 ]; then
    hc use_index "$i"
    hc set_layout vertical
  else
    hc use_index "$i"
    hc set_layout grid
  fi
done

# switch to main monitor
hc use_index 1
hc focus_monitor 1

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

# layouting
hc keybind $Mod-r remove
hc keybind $Mod-s floating toggle
hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-f set_attr clients.focus.floating toggle
hc keybind $Mod-p pseudotile toggle
hc keybind $Mod-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

# mouse
hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-c cycle
hc keybind $Mod-i jumpto urgent

#set multi monitor focus
hc set focus_crosses_monitor_boundaries true

#focus follows mouse
hc set focus_follows_mouse true

#dont swap monitors to get tag if already on monitor
hc set swap_monitors_to_get_tag false

# theme
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1
hc set frame_border_active_color '#00ff00'
hc set frame_border_normal_color '#ffffff'
hc set frame_border_width 0
hc set frame_active_opacity 50
hc set frame_normal_opacity 100
hc set always_show_frame off
hc set frame_gap 0

#theme2
hc attr theme.active.color '#00ff00'
hc attr theme.normal.color '#ffffff'
hc attr theme.urgent.color '#ff0000'
hc attr theme.inner_width 0
hc attr theme.inner_color '#ffffff'
hc attr theme.border_width 2.5 
hc attr theme.floating.border_width 2
hc attr theme.floating.outer_width 1
hc attr theme.floating.outer_color '#ffffff'

#window rules/theme
hc set window_gap 6 
hc set frame_padding on
hc set smart_window_surroundings on
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 10

# rules
hc unrule -F

# focus new clients
hc rule focus=on 
hc rule floatplacement=smart
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

# unlock, just to be sure
hc unlock

# detect monitors
hc detect_monitors

# apply the panel
panel=~/.config/herbstluftwm/scripts/panel.sh
[ -x "$panel" ] || panel=/etc/xdg/herbstluftwm/panel.sh
for monitor in $(hc list_monitors | cut -d: -f1) ; do
    # start it on each monitor
    "$panel" "$monitor" &
done

# start compton (req compton)
compton &

# start polybars (req polybar)
polybar main-hlwm &
polybar sec-hlwm &

# start dunst (req dunst)
dunst &

# restore wallpapers
nitrogen --restore &
