#!/bin/bash

# "bash strict mode"
set -uo pipefail

# settings
SMB_CREDS="/home/$USER/.smbcreds"
BKUP_CFG="/home/$USER/.bkupcfg"
SMB_CFG="/home/$USER/.smbcfg"

# give user feedback
scriptFeedback() {
    case $1 in
        error)
            printf "[\e[1m\e[9%sm%s\e[0m]%s\n" "1" "✗" " $2" 
            ;;
        success)
            printf "[\e[1m\e[9%sm%s\e[0m]%s\n" "2" "✓" " $2" 
            ;;
        proc)
            printf "[\e[1m\e[9%sm%s\e[0m]%s\n" "3" ".." " $2" 
            ;;
    esac
}

# mount SMB
handleMount() {
    if
    "$SU_SYS" /bin/mount $SMB_SERVER -t cifs -o user,uid=1000,rw,credentials=$SMB_CREDS $SMB_MOUNT; 
    then
        clear
        scriptFeedback success "Successfully mounted!"
    else
        scriptFeedback error "Some error occured!"
        exit 1
    fi
}

# unmount SMB
handleUnmount() {
    if
    "$SU_SYS" /bin/umount -l "$SMB_MOUNT"; 
    then
        clear
        scriptFeedback success "Successfully unmounted!"
        exit 0
    else
        scriptFeedback error "Some error occured!"
        exit 1
    fi
}

# read config
readConfig() {
    while read -r line; do
        case $line in
            "bkupTarget"*)
                TARGET=$(echo "$line" | cut -d "=" -f 2)
                ;;
            "serverPath"*)
                SMB_SERVER=$(echo "$line" | cut -d "=" -f 2)
                ;;
            "serverMount"*)
                SMB_MOUNT=$(echo "$line" | cut -d "=" -f 2)
                ;;
        esac
    done < "$1"
}

# list backup folders
dirList() {
    while read -r line; do
        if [[ "$line" == "/"* ]]; then
            echo "$line"
        fi
    done < "$BKUP_CFG"
}

# detect su system
if command -v /bin/sudo >> /dev/null; then
    SU_SYS="/bin/sudo"
else
    SU_SYS="/bin/doas"
fi

# check if config files exist, else exit
if [ -e $SMB_CREDS ] && [ -e $SMB_CFG ]; then
    scriptFeedback success "SMB config files found!"
else
    scriptFeedback error "No SMB config files found!"
    exit 1
fi

if [ -e $BKUP_CFG ]; then
    scriptFeedback success "Backup config file found!"
else
    scriptFeedback error "No Backup config file found!"
    exit 1
fi

# read config files
readConfig "$BKUP_CFG"
readConfig "$SMB_CFG"

# check if smb is mounted, handle accordingly
if /bin/mountpoint "$SMB_MOUNT" >> /dev/null; then
    scriptFeedback success "SMB already mounted!"
else
    scriptFeedback proc "Mounting SMB..."
    handleMount
fi

# backup folder
scriptFeedback proc "Backup to SMB"
if /bin/rsync -a --delete --info=name1 $(dirList) $TARGET/; then
    scriptFeedback success "Backup finished!"
    exit 0
else
    scriptFeedback error "Some error occured!"
    exit 1
fi
