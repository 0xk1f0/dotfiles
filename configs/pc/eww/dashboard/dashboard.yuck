; DATE-TIME ;

(defpoll DAY :interval "1h"
    "date '+%d'"
)
(defpoll YEAR :interval "1h"
    "date '+%Y'"
)
(defpoll TIME :interval "1s"
    "date +%H:%M"
)
(defpoll DATE :interval "1s"
    "date +%d.%m.%Y"
)

; VOLUME ;

(defpoll SINK :interval "1s"
    "/home/$USER/.config/eww/scripts/vol.sh sink"
)
(defpoll SOURCE :interval "1s"
    "/home/$USER/.config/eww/scripts/vol.sh source"
)

; SYSTEM ;

(defpoll STATE_NRM :interval "999h"
    "grep 'nrm' /home/$USER/.config/eww/colors.scss | awk '{print $2}' | tr -d ';'"
)
(defpoll BLE_STATE :interval "3s"
    "/home/$USER/.config/eww/scripts/ble.sh status"
)
(defpoll NET_TYPE :interval "3s"
    "/home/$USER/.config/eww/scripts/net.sh type"
)
(defpoll NET_STATE :interval "3s"
    "/home/$USER/.config/eww/scripts/net.sh status"
)

; MUSIC ;

(deflisten TITLE :initial "Offline"
    "playerctl -F metadata title"
)
(deflisten ARTIST :initial ""
    "playerctl -F metadata artist"
)

(defwidget volume []
    (box 
        :class "volume"
        :orientation "v"
        :halign "center"
        :space-evenly "false"
        (box
            :class "sliderbar"
            :orientation "h"
            :spacing 7
            :space-evenly "false"
            (label
                :wrap "true"
                :class "volicon"
                :text ""
            )
            (scale 
                :min 0
                :max 101
                :value SINK
                :active "true"
                :onchange "/home/$USER/.config/eww/scripts/vol.sh sink-set {}"
            )
            (label
                :wrap "true"
                :class "slidervalue"
                :text "${SINK}%"
            )
        )
        (box 
            :class "sliderbar"
            :orientation "h"
            :spacing 7
            :space-evenly "false"
            (label
                :wrap "true"
                :class "micicon"
                :text ""
            )
            (scale
                :min 0
                :max 101
                :value SOURCE
                :active "true"
                :onchange "/home/$USER/.config/eww/scripts/vol.sh source-set {}"
            )
            (label
                :wrap "true"
                :class "slidervalue"
                :text "${SOURCE}%"
            )
        )
    )
)

(defwidget music []
    (box 
        :class "music"
        :orientation "v"
        :space-evenly "false"
		(box
            :class "music-player"
            :orientation "h"
            :spacing 28
            :halign "center"
            :space-evenly "false"
            (button 
                :class "btn_prev"
                :onclick "bash /home/$USER/.config/scripts/media.sh prev"
                ""
            )
            (box 
                :orientation "h"
                :space-evenly "false"
                :spacing 14
                (box
                    :orientation "v"
                    (label
                        :xalign 0.5
                        :class "song"
                        :limit-width 25
                        :text TITLE
                    )
                    (label 
                        :xalign 0.5
                        :class "artist"
                        :limit-width 25
                        :text ARTIST
                    )
                )
            )
            (button
                :class "btn_next"
                :onclick "bash /home/$USER/.config/scripts/media.sh next"
                ""
            )
        )
    )
)

(defwidget system []
    (box
        :space-evenly "true"
        :spacing 14
        :orientation "h"
        :halign "fill"
        (button
            :class "network"
            :onclick ""
            :style "background-color: ${NET_STATE == 'connected' ? STATE_NRM : ''};"
            NET_TYPE
        )
        (button
            :class "bluetooth"
            :onclick "/home/$USER/.config/eww/scripts/ble.sh toggle"
            :style "background-color: ${BLE_STATE == 'no' ? '' : STATE_NRM};"
            ""
        )
    )
)

(defwidget clock []
    (box 
        :class "clock"
        :space-evenly "false"
        :halign "fill"
        :orientation "v"
        (label 
            :xalign 0
            :class "clock-time"
            :text TIME
        )
        (label 
            :xalign 0
            :class "clock-date"
            :text DATE
        )
    )
)

(defwidget cal []
	(box
        :class "calendar-wrapper"
        :orientation "v"
	    (calendar 
            :class "calendar"
            :day DAY 
            :year YEAR
        )
    )
)

(defwidget dash []
    (box
        :class "dashboard"
        :space-evenly "false"
        :orientation "v"
        :spacing 14
        (clock)
        (system)
        (volume)
        (music)
        (cal)
        
    )
)

(defwindow dashboard 
    :focusable false
    :monitor 0
    :stacking "fg"
    :geometry ( geometry 
            :x 0
            :y 0
            :anchor "top left"
    )
    (dash)
)
