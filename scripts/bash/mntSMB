#!/usr/bin/env bash

# "bash strict mode"
set -uo pipefail

# settings
SMB_CREDS="/home/${_USER}/.smbcreds"
SMB_CFG="/home/${_USER}/.smbcfg"

# tweaked fzf chooser
fzf_choose() {
    local choices=("$@")
    local prompt="${choices[-2]}"
    local output="${choices[-1]}"
    unset 'choices[-1]' && unset 'choices[-1]'
    printf -v $output \
    "$(printf "%s\n" "${choices[@]}" \
    | fzf --multi --prompt="$prompt > ")"
}

# handle mount SMB
handle_mount() {
    SHARES=()
    for i in {1..10}; do
        if [ -v "SMB_SERVER_${i}" ]; then
            _SERVER="SMB_SERVER_${i}"
            SHARES+=(${!_SERVER})
        fi
    done
    SHARE_COUNT=${#SHARES[@]}
    if [ $SHARE_COUNT -gt 1 ]; then
        fzf_choose "${SHARES[@]}" "What Share to mount?" SMB_SERVER
    else
        SMB_SERVER=$SMB_SERVER_1
    fi
    if
    $SU_SYS mount "$SMB_SERVER" -t cifs \
    -o user,uid=1000,rw,credentials="$SMB_CREDS" "$SMB_MOUNT";
    then
        printf "[\e[1m\e[92m✓\e[0m]%s\n" " Done"
        exit 0
    else
        printf "[\e[1m\e[91m✗\e[0m]%s\n" " Mount error"
        exit 1
    fi
}

# handle unmount SMB
handle_unmount() {
    local _OPTIONS=(
        "no"
        "yes"
    )
    fzf_choose "${_OPTIONS[@]}" "Mountpoint occupied, unmount?" UNMOUNT_CHOICE
    if [ "${UNMOUNT_CHOICE}" == "yes" ]; then
        if
        $SU_SYS umount -l "$SMB_MOUNT";
        then
            printf "[\e[1m\e[92m✓\e[0m]%s\n" " Done"
            exit 0
        else
            printf "[\e[1m\e[91m✗\e[0m]%s\n" " Unmount error"
            exit 1
        fi
    else
        exit 0
    fi
}

# check for root run and react accordingly
if [ $EUID -eq 0 ]; then
    SU_SYS=""
    if [ -v SUDO_USER ]; then
        _USER=$SUDO_USER
    else
        _USER=$DOAS_USER
    fi
else
    _USER=$USER
    if command -v sudo >> /dev/null; then
        SU_SYS="sudo"
    else
        SU_SYS="doas"
    fi
fi

# check if config files exist read, else exit
if [ -e "${SMB_CREDS}" ] && [ -e "${SMB_CFG}" ]; then
    printf "[\e[1m\e[93m⧗\e[0m]%s\n" " Loading SMB config.."
    . "${SMB_CFG}"
else
    printf "[\e[1m\e[91m✗\e[0m]%s\n" \
    " No SMB config files found for user '${1}'!"
    exit 1
fi

# check if mountpoint is occupied, if not, mount
if mountpoint "${SMB_MOUNT}" >> /dev/null; then
    handle_unmount
else
    handle_mount
fi
